{
	"info": {
		"_postman_id": "cd36351f-fd10-4b03-95fd-167c9a11e23d",
		"name": "Projet Rentrée Back",
		"description": "Cette collection contient toutes les requêtes utiles à faire à l'API Rest de notre projet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20210699"
	},
	"item": [
		{
			"name": "Dishes",
			"item": [
				{
					"name": "GetDishes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    //FILTRES & TRI\r\n\r\n    \"searchText\":\"\", //recherche dans le nom\r\n    \"lowerPrice\":0, //prix le plus bas\r\n    \"upperPrice\":999, //prix le plus haut\r\n\r\n    \"diets\":[], //filtre sur le régime alimentaires\r\n    \"tags\":[], // filtre sur les tags\r\n\r\n    \"sortBy\":\"NAME\", //mode de tri\r\n    \"sortOrder\":\"ASC\" // ordre de tri\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dishes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes"
							]
						},
						"description": "Recupère la liste des plats, avec possibilité de filters et de trier les plats.\n\nLe mot de tri par defaut des plats est par id ascendants."
					},
					"response": []
				},
				{
					"name": "AddDish",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"un plat\",\r\n    \"description\":\"c'est un bon plat\",\r\n    \"alergens\":\"liste des alergens\",\r\n    \"tags\":[\"VEGETABLE\",\"FISH\"],\r\n    \"diet\":\"VEGAN\",\r\n    \"image\":\"\",\r\n    \"price\":25.12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dishes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes"
							]
						},
						"description": "Permet d'ajouter un plat\n\n**Attention : Vous devez être athentifié en tant qu'administateur**"
					},
					"response": []
				},
				{
					"name": "DeleteDishById",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/dishes/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"2"
							]
						},
						"description": "Permet de supprimer un plat\n\n**Attention : Vous devez être athentifié en tant qu'administateur**"
					},
					"response": []
				},
				{
					"name": "GetDishById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dishes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"1"
							]
						},
						"description": "Permet de récuperer le detail d'un plat à partir de son id.\n\n``` json\n{\n    \"id\": 1,\n    \"name\": \"Spaghetti Carbonara\",\n    \"description\": \"Classic Italian pasta dish with eggs, cheese, pancetta, and black pepper.\",\n    \"alergens\": \"Contains: eggs, dairy, pork\",\n    \"image\": \"https://img.cuisineaz.com/660x660/2023/04/11/i192604-pates-a-la-carbonara.jpg\",\n    \"tags\": [\n        \"MEAT\"\n    ],\n    \"diet\": \"NORMAL\",\n    \"price\": 12.99\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "ModifyDish",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"plat modifié\",\r\n    \"description\":\"il est modifié\",\r\n    \"alergens\":\"autres alergens\",\r\n    \"tags\":[\"HEALTHY\"],\r\n    \"diet\":\"OTHER\",\r\n    \"image\":\"\",\r\n    \"price\":15.23\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dishes/6",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"6"
							]
						},
						"description": "Permet de modifer un plat\n\n**Attention : Vous devez être athentifié en tant qu'administateur**"
					},
					"response": []
				},
				{
					"name": "GetDiets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dishes/diets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"diets"
							]
						},
						"description": "Permet de recuperer la liste des regime alimentaires des plats ainsi que leurs labels associés.\n\n``` json\n{\n    \"VEGAN\": \"Vegan\",\n    \"VEGETARIAN\": \"Vegetarian\",\n    \"NORMAL\": \"Normal\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "GetTags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dishes/tags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"tags"
							]
						},
						"description": "Permet de recuperer la liste des tag que l'on peut associer aux plats ainsi que leurs labels associés.\n\n``` json\n{\n    \"MEAT\": \"Meat\",\n    \"DESSERT\": \"Dessert\",\n    \"OTHER\": \"Other\",\n    \"HEALTHY\": \"Healthy\",\n    \"VEGETABLE\": \"Vegetable\",\n    \"DRINK\": \"Drink\",\n    \"FISH\": \"Fish\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "GetSortingMethods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dishes/sortingMethods",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dishes",
								"sortingMethods"
							]
						},
						"description": "Permet de recuperer la liste des méthode de tri des plats ainsi que leurs labels associés.\n\n``` json\n{\n    \"PRICE\": \"Price\",\n    \"NAME\": \"Name\"\n}\n\n ```"
					},
					"response": []
				}
			],
			"description": "Représente un plat dans l'application.\n\nEn base de données, un plat est représenté dans la table DISHES qui contient :\n\n- un nom\n- une description\n- une liste d'alergènes (texte)\n- une image (url)\n- un prix\n- un regime alimentaire (normal, végétarien ou vegan)\n- une liste de tags utilisés pour filtrer les plats"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@admin.com\",\r\n    \"password\":\"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						},
						"description": "Permet de se connecter à un compte via email et mot de passe.\n\n**L'API retourne un token de connexion qui est stocké dans les cookies pour toutes les requêtes qui recupèrent des informations liées à un utilisateur.**"
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\":\"Prenom\",\r\n    \"lastname\":\"Nom\",\r\n    \"email\":\"adressemailvalide@gmail.com\",\r\n    \"password\":\"password\",\r\n    \"address\": \"address\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"register"
							]
						},
						"description": "Permet de créer un compte en fournissant nom, prénom, email et mot de passe ainsi qu'une adresse"
					},
					"response": []
				},
				{
					"name": "GetUserInfo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "1415fd01-11a0-4c7c-82a0-b5cf5b13beda",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"info"
							]
						},
						"description": "Permet de recuperer des informations sur l'utilisateur connecté.\n\n``` json\n{\n    \"email\": \"admin@admin.com\",\n    \"firstname\": \"Admin firstname\",\n    \"lastname\": \"Admin lastname\",\n    \"address\": \"Admin address\",\n    \"balance\": 1000000.0\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"logout"
							]
						},
						"description": "Permet de se deconnecter de son compte."
					},
					"response": []
				},
				{
					"name": "ResetPasswordMail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/resetPasswordMail?email=adressemailvalide@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"resetPasswordMail"
							],
							"query": [
								{
									"key": "email",
									"value": "adressemailvalide@gmail.com",
									"description": "adresse mail valide à laquelle sera envoyé le mail"
								}
							]
						},
						"description": "Envoie un mail à l'adresse mail demandée qui permet de changer de mot de passe.\n\nL'email doit être associé à un compte existant en base et doit être valide.\n\nCe mail présente un bouton qui renvoie vers l'application avec un token. Ce token est utilisé ensuite pour faire un appel à /resetpassword pour réinitialiser le mot de passe."
					},
					"response": []
				},
				{
					"name": "ResetPassword",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/resetPassword?token=d54014d7-5ffd-48f2-960e-a48efd395c92&password=testtest",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"resetPassword"
							],
							"query": [
								{
									"key": "token",
									"value": "d54014d7-5ffd-48f2-960e-a48efd395c92",
									"description": "Token récupéré depuis le mail de demande de reinitialisation"
								},
								{
									"key": "password",
									"value": "testtest",
									"description": "Nouveau mot de passe"
								}
							]
						},
						"description": "Permet de reinitialiser le mot de passe d'un compte.\n\nLe token envoyé n'est valide que s'il proviens d'un mail envoyé à l'addresse mail d'un compte."
					},
					"response": []
				}
			],
			"description": "Gestion des utilisateurs et de tout le système d'authentification.\n\nEn base de données, un utilisateur est représenté par la table CUSTOMERS qui contient :\n\n- un email, idéalement une adresse mail existante valide puisque un mail y sera envoyé pour une demande de changement de mot de passe, le passage d'une nouvelle commande, ...\n- un mot de passe\n- un nom\n- un prénom\n- une cagnote\n    \n- une adresse\n    \n- un booleen permettant de savoir si l'utilisateur à les permissions d'admin\n    \n\nToute notre gestion des utilisateur se base sur un token retourné à la connexion. A chaque connexion, ce token est différent. Il envoyé dans le header de chaque requête qui recupère des données liées à un utilisateur. Attention, les tokens sont tous supprimés à l'arrêt de l'API, ce qui déconnecte tous les utilisateurs.\n\nDeux comptes sont déjà créés au lancement de l'API :\n\n- Compte de test :\n    - **Mail** : [user@user.com](https://mailto:user@user.com)\n    - **Mot de passe** : user\n- Compte de test avec les privilèges administrateur :\n    - **Mail** : [admin@admin.com](https://mailto:admin@admin.com)\n    - **Mot de passe** : admin"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "GetAllOrders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders?sortingMethod=&sortingOrder=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "sortingMethod",
									"value": "",
									"description": "Mode de tri (par date si non spécifié)"
								},
								{
									"key": "sortingOrder",
									"value": "",
									"description": "Ordre de tri (croissant si non spécifié)"
								}
							]
						},
						"description": "Permet de récuperer l'historique de commande de l'utilisateur connecté.\n\n``` json\n[\n    {\n        \"id\": 1,\n        \"totalPrice\": 36.65,\n        \"date\": \"2023-09-05T16:32:47.626953\",\n        \"address\": \"1 rue des zozos\"\n    },\n    {\n        \"id\": 2,\n        \"totalPrice\": 36.0,\n        \"date\": \"2023-09-05T16:33:08.220904\"\n        \"address\": \"1 rue des maboules\"\n    }\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "AddOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderContent\": {\r\n        \"3\":1,\r\n        \"4\":2\r\n    },\r\n    \"address\": \"address\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Permet de passer une commande en tant qu'utilisateur connecté.\n\nLe contenu de la commande contient la liste des id des plats choisis (ci-dessous 3 et 4) associés à leurs quantités (ci-dessous 1 et 2), et l'adresse de livraison"
					},
					"response": []
				},
				{
					"name": "GetOrderDetail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"1"
							]
						},
						"description": "Permet de récuperer le detail d'une commande à partir de son id.  \nLa commande doit avoir été passée par l'utilisateur connecté.\n\n``` json\n{\n    \"id\": 1,\n    \"date\": \"2023-09-05T16:32:47.626953\",\n    \"totalPrice\": 36.65,\n    \"address\": \"address\"\n    \"orderContent\": {\n        \"3\": 1,\n        \"4\": 2\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "GetSortingMethods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/sortingMethods",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"sortingMethods"
							]
						},
						"description": "Permet de recuperer les modes de tris des commandes aisin que leurs labels associés.\n\n``` json\n{\n    \"DATE\": \"Date\",\n    \"PRICE\": \"Price\"\n}\n\n ```"
					},
					"response": []
				}
			],
			"description": "Représente un commande.\n\nEn base de données, une commande est représentée par deux tables :\n\n- Une table ORDERS qui contient :\n    \n    - L'id de l'utilisateur qui a passé la commande\n    - La date de création de la commande\n        \n    - L'adresse de livraison\n        \n- Une table ORDER_DISHES qui associe des plat à un commande avec un certaine quantité"
		},
		{
			"name": "GetSortingOrders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/main/sortingOrders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"main",
						"sortingOrders"
					]
				},
				"description": "Permet de recuperer les modes de tri (ascendant ou descendant) ainsi que leurs labels associés.\n\n``` json\n{\n    \"DESC\": \"Descending\",\n    \"ASC\": \"Ascending\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "StatusRequest",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user_token",
			"value": "1415fd01-11a0-4c7c-82a0-b5cf5b13beda"
		},
		{
			"key": "base_url",
			"value": "http://localhost:8080/api",
			"type": "string"
		}
	]
}